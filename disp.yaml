esphome:
  name: disp
  platform: ESP8266
  board: nodemcuv2
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password 
  ap:
    ssid: "Display Fallback Hotspot"
    password: "XP3ipKcUzXmJ"
captive_portal:
logger:
api:
ota:
status_led:
  pin:
    number: D0
    inverted: True

time:
  - platform: homeassistant
    id: esptime

font:
  - file: "fonts/SFNSMono.ttf"
    id: font_10 
    size: 10 
  - file: "fonts/SFNSMono.ttf"
    id: font_16 
    size: 16 

sensor:
  - platform: homeassistant
    id: well_pressure 
    entity_id: sensor.well_water_pressure 
    internal: true

binary_sensor:
  - platform: homeassistant
    id: well_pump_on 
    entity_id: binary_sensor.well_pump_2 
    internal: true

i2c:
  scl: D1
  sda: D2
  scan: True

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    lambda: |-
      // Print in top center.
      it.printf(64, 0, id(font_10), TextAlign::TOP_CENTER, "Well Pressure");

      if (id(well_pressure).has_state()) {
        it.printf(64, 14, id(font_16), TextAlign::TOP_CENTER, "%.1f psi", id(well_pressure).state);
      } else {
        it.printf(64, 14, id(font_16), TextAlign::TOP_CENTER, "%s psi", "-");
      }

      if (id(well_pump_on).has_state()) {
        if (id(well_pump_on).state) {
          it.printf(64, 32, id(font_16), TextAlign::TOP_CENTER, "Pump %s", "ON");
        } else {
          it.printf(64, 32, id(font_16), TextAlign::TOP_CENTER, "Pump %s", "OFF");
        }
      }

      // it.strftime(64, 50, id(font_10), TextAlign::TOP_CENTER, "%H:%M", id(esptime).now());

